# Generated by Django 4.1.5 on 2023-05-17 05:23

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('eventNo', models.AutoField(primary_key=True, serialize=False, verbose_name='메세지번호')),
                ('eventtype', models.CharField(choices=[(1, '안전모 미착용'), (2, '안전벨트 미착용'), (3, '안전화 미착용')], max_length=20, verbose_name='위반 종류')),
                ('eventtime', models.DateTimeField(auto_now_add=True, null=True, verbose_name='위반 시간')),
            ],
            options={
                'verbose_name': '이벤트',
                'verbose_name_plural': '이벤트',
                'db_table': 'Event',
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('setno', models.AutoField(primary_key=True, serialize=False, verbose_name='설정번호')),
                ('cammode', models.IntegerField(choices=[(1, 'WebCam'), (2, 'USBCam'), (3, 'IPCam')], verbose_name='카메라 모드')),
                ('camIP', models.CharField(blank=True, max_length=20, null=True, verbose_name='카메라 IP')),
                ('camport', models.IntegerField(blank=True, null=True, verbose_name='카메라 포트')),
                ('alarmmode', models.CharField(choices=[(1, 'SMS문자메세지'), (2, '디스코드'), (3, '이메일')], max_length=20, verbose_name='알람 모드')),
                ('alarmsend', models.CharField(max_length=30, verbose_name='알람 전송 대상')),
                ('logpath', models.CharField(blank=True, max_length=50, null=True, verbose_name='로그 저장 경로')),
                ('videorecordlength', models.IntegerField(blank=True, null=True, verbose_name='영상 저장 길이')),
            ],
            options={
                'verbose_name': '설정',
                'verbose_name_plural': '설정',
                'db_table': 'Setting',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('fileNo', models.AutoField(primary_key=True, serialize=False, verbose_name='파일번호')),
                ('filepath', models.CharField(max_length=100, verbose_name='파일 경로')),
                ('regdate', models.DateField(default=models.DateField(auto_now_add=True), verbose_name='등록날짜')),
                ('title', models.CharField(max_length=100, verbose_name='제목')),
                ('video_file', models.FileField(upload_to='videos/', verbose_name='비디오 파일')),
            ],
            options={
                'verbose_name': 'Video Upload',
                'verbose_name_plural': 'Video Upload',
                'db_table': 'Video',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('is_active', models.BooleanField(default=True)),
                ('regdate', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='user_set+', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set+', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
